


location /stock/ {
    proxy_pass http://money.163.com;			#	最终的url(http://money.163.com/stock/)
	proxy_buffering off;
}

location /ipo/ {
    proxy_pass http://money.163.com/;			#	最终的url(http://money.163.com/)
}













#proxy_bind							向后端发送请求前，绑定本地地址和端口; (e.g. proxy_bind  192.168.1.1;)
#proxy_buffer_size					默认4k/8k
#proxy_buffering					是否缓存后端服务器反馈的数据(e.g. proxy_buffering off;)
#proxy_buffers
#proxy_busy_buffers_size

#proxy_cache
#proxy_cache_bypass
#proxy_cache_key
#proxy_cache_lock
#proxy_cache_lock_timeout
#proxy_cache_methods
#proxy_cache_min_uses
#proxy_cache_path
#proxy_cache_use_stale
#proxy_cache_valid

#proxy_connect_timeout				由于nginx采用非阻塞connect, 一次调用可能不能马上成功，需要等待一段时间才能触发可以写数据事件（这个检查连接成功写事件触发的超时时间）
#proxy_cookie_domain
#proxy_cookie_path	 

#proxy_headers_hash_bucket_size		作用？？？
#proxy_headers_hash_max_size		作用？？？

#proxy_pass_header					向客户端必须转发的头域，将忽略指令"proxy_hide_header"指定的头域，此指令的优先级高于指令 "proxy_hide_header"，
#proxy_hide_header					设置不转发到客户端的头域列表；（系统默认不转发后端服务器到客户端的响应头域列表有：Date、Expires等）
#proxy_http_version					向后端发送请求时，请求行中的HTTP协议版本
#proxy_ignore_client_abort
#proxy_ignore_headers
#proxy_intercept_errors
#proxy_max_temp_file_size
#proxy_method						指定向后端服务器发送请求时使用的method
#proxy_next_upstream
#proxy_no_cache

#proxy_pass

#proxy_read_timeout					接收响应的超时时间（请求发送到后端服务器，在这个时间内必须返回response）
#proxy_send_timeout					由于后端服务器网络忙，一次请求不能发送成功，再次尝试发送请求的超时时间间隔（网络繁忙是系统调用返回again这种情况）

#proxy_pass_request_body			？？？？
#proxy_pass_request_headers			是否将客户端的请求头转发至后端服务器, 默认是开启的。
#proxy_redirect
#proxy_send_lowat					缓冲区低潮阀值；(默认是0；SO_SNDLOWAT)

#proxy_set_body						发送到后端服务器的数据体？？？？添加的字符串怎样发送到后端服务器的？
#proxy_set_header					设置发送到后端服务器的头域(包括value), 如果设置的头域与系统已定义的相同，将忽略系统定义的
#proxy_ssl_session_reuse
#proxy_store
#proxy_store_access
#proxy_temp_file_write_size
#proxy_temp_path
