Q:	filter模块到底哪个先被执行呢？

在文件auto/modules中有如下几行: 可以看到filter的执行顺序很重要。
# the module order is important
#     ngx_http_static_module
#     ngx_http_gzip_static_module
#     ngx_http_dav_module
#     ngx_http_autoindex_module
#     ngx_http_index_module
#     ngx_http_random_index_module
#
#     ngx_http_access_module
#     ngx_http_realip_module
#
#
# the filter order is important
#     ngx_http_write_filter
#     ngx_http_header_filter
#     ngx_http_chunked_filter
#     ngx_http_range_header_filter
#     ngx_http_gzip_filter
#     ngx_http_postpone_filter
#     ngx_http_ssi_filter
#     ngx_http_charset_filter
#         ngx_http_xslt_filter
#         ngx_http_image_filter
#         ngx_http_sub_filter
#         ngx_http_addition_filter
#         ngx_http_userid_filter
#         ngx_http_headers_filter
#     ngx_http_copy_filter
#     ngx_http_range_body_filter
#     ngx_http_not_modified_filter

结构体 ngx_http_module_t {
	...
	ngx_int_t (*postconfiguration)(ngx_conf_t *cf);
	...
}
中的postconfiguration用于注册http模块的handler和filter，在我的系统中，共有这些回调函数被注册，这些回调函数中会添加具体的handler和filter。
ngx_http_log_init
ngx_http_static_init
ngx_http_autoindex_init
ngx_http_index_init
ngx_http_auth_basic_init
ngx_http_access_init
ngx_http_limit_conn_init
ngx_http_limit_req_init
ngx_http_rewrite_init

ngx_http_write_filter_init
ngx_http_header_filter_init
ngx_http_chunked_filter_init
ngx_http_range_header_filter_init
ngx_http_gzip_filter_init
ngx_http_postpone_filter_init
ngx_http_ssi_filter_init
ngx_http_charset_postconfiguration
ngx_http_addition_filter_init
ngx_http_userid_init
ngx_http_headers_filter_init
ngx_http_echo_filter_init
ngx_http_copy_filter_init
ngx_http_range_body_filter_init
ngx_http_not_modified_filter_init

查看函数中注册的hanlder和filter

hanlder：
	
filter:	先注册的最后被调用(hf=head filter、bf=body filter)

ngx_http_not_modified_filter_init(模块ngx_http_not_modified_filter_module)	
	|-- ngx_http_not_modified_header_filter(hf)
	
ngx_http_range_body_filter_init(模块ngx_http_range_body_filter_module)	
	|-- ngx_http_range_body_filter(bf)
	
ngx_http_copy_filter_init(模块ngx_http_copy_filter_module)
	|-- ngx_http_copy_filter(bf)
	
ngx_http_echo_filter_init(模块ngx_http_echo_module)
	|-- ngx_http_echo_header_filter(hf)
	|-- ngx_http_echo_body_filter(bf)
	
ngx_http_headers_filter_init(模块ngx_http_headers_filter_module)
	|-- ngx_http_headers_filter(hf)
	
ngx_http_userid_init(模块ngx_http_userid_filter_module)
	|-- ngx_http_userid_filter(hf)
	
ngx_http_addition_filter_init(模块ngx_http_addition_filter_module)
	|-- ngx_http_addition_header_filter(hf)
	|-- ngx_http_addition_body_filter(bf)
	
ngx_http_charset_postconfiguration(模块ngx_http_charset_filter_module)
	|-- ngx_http_charset_header_filter(hf)
	|-- ngx_http_charset_body_filter(bf)
	
ngx_http_ssi_filter_init(模块ngx_http_ssi_filter_module)
	|-- ngx_http_ssi_header_filter(hf)
	|-- ngx_http_ssi_body_filter(bf)
	
ngx_http_postpone_filter_init(模块ngx_http_postpone_filter_module)
	|-- ngx_http_postpone_filter(bf)
	
ngx_http_gzip_filter_init(模块ngx_http_gzip_filter_module)
	|-- ngx_http_gzip_header_filter(hf)
	|-- ngx_http_gzip_body_filter(bf)
	
ngx_http_range_header_filter_init(模块ngx_http_range_header_filter_module)
	|-- ngx_http_range_header_filter(hf)
	
ngx_http_chunked_filter_init(模块ngx_http_chunked_filter_module)
	|-- ngx_http_chunked_header_filter(hf)
	|-- ngx_http_chunked_body_filter(bf)
	
ngx_http_header_filter_init(模块ngx_http_header_filter_module)
	|-- ngx_http_header_filter(hf)

ngx_http_write_filter_init(模块ngx_http_write_filter_module)
	|-- ngx_http_write_filter(bf)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	



